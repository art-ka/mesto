(()=>{"use strict";var e={318:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t,n){return(o="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var l=n(643),f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(i,e);var t,n,r=(t=i,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(t=r.call(this))._sourceLike=e,t}return u(i,null,[{key:"from",value:function(e){return e instanceof l?e:new i(e)}}]),u(i,[{key:"source",value:function(){return this._sourceLike.source()}},{key:"buffer",value:function(){return"function"==typeof this._sourceLike.buffer?this._sourceLike.buffer():o(s(i.prototype),"buffer",this).call(this)}},{key:"size",value:function(){return"function"==typeof this._sourceLike.size?this._sourceLike.size():o(s(i.prototype),"size",this).call(this)}},{key:"map",value:function(e){return"function"==typeof this._sourceLike.map?this._sourceLike.map(e):o(s(i.prototype),"map",this).call(this,e)}},{key:"sourceAndMap",value:function(e){return"function"==typeof this._sourceLike.sourceAndMap?this._sourceLike.sourceAndMap(e):o(s(i.prototype),"sourceAndMap",this).call(this,e)}},{key:"updateHash",value:function(e){if("function"==typeof this._sourceLike.updateHash)return this._sourceLike.updateHash(e);if("function"==typeof this._sourceLike.map)throw new Error("A Source-like object with a 'map' method must also provide an 'updateHash' method");e.update(this.buffer())}}]),i}(l);e.exports=f},643:e=>{function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var n,r;return n=e,(r=[{key:"source",value:function(){throw new Error("Abstract")}},{key:"buffer",value:function(){var e=this.source();return Buffer.isBuffer(e)?e:Buffer.from(e,"utf-8")}},{key:"size",value:function(){return this.buffer().length}},{key:"map",value:function(e){return null}},{key:"sourceAndMap",value:function(e){return{source:this.source(),map:this.map(e)}}},{key:"updateHash",value:function(e){throw new Error("Abstract")}}])&&t(n.prototype,r),e}();e.exports=n}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}(()=>{function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r){var o=e.name,i=e.link,u=e.likes,c=e.ownerId,a=e.id,s=e.userId,l=r.handleCardClick,f=r.handleDeleteClick,p=r.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=o,this._link=i,this._likes=u,this._id=a,this._ownerId=c,this._userId=s,this._template=n,this._handleCardClick=l,this._handleDeleteClick=f,this._handleLikeClick=p}var n,r;return n=t,(r=[{key:"generateCard",value:function(){var e=this;return this._element=this._template,this._image=this._element.querySelector(".element__image"),this._image.src=this._link,this._image.alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this._likesCount=this._element.querySelector(".element__likes"),this._likeButton=this._element.querySelector(".element__like-image"),this._likes&&this._likes.length>0&&(this._likesCount.textContent=this._likes.length,this._likes.find((function(t){return t._id===e._userId}))&&this._likeButton.classList.add("element__like-image-active")),this._displayDeleteButton(),this._setEventListeners(),this._element}},{key:"handleDeleteCard",value:function(){this._element.remove()}},{key:"getId",value:function(){return this._id}},{key:"isLiked",value:function(){return this._likeButton.classList.contains("element__like-image-active")}},{key:"updateLikes",value:function(e){this._likes=e}},{key:"likeCountPlus",value:function(){this._likeButton.classList.add("element__like-image-active");var e=+this._likesCount.textContent;this._likesCount.textContent=e+1}},{key:"likeCountMinus",value:function(){this._likeButton.classList.remove("element__like-image-active");var e=this._likesCount.textContent;this._likesCount.textContent=e-1}},{key:"_displayDeleteButton",value:function(){this._element.querySelector(".element__delete-button").hidden=this._ownerId!==this._userId}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._handleLikeClick()})),this._image.addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})})),this._element.querySelector(".element__delete-button").addEventListener("click",(function(){return e._handleDeleteClick()}))}}])&&e(n.prototype,r),t}(),r={formSelector:".popup__form",inputSelector:".popup__field",formAdd:".popup_type_add",formEdit:".popup_type_edit",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button-disabled",inputErrorClass:"popup__field-error",errorClass:"popup__field-error-active"},o=(document.querySelector(".popup__image"),document.querySelector(".popup__caption"),document.querySelector(".popup_type_add")),i=document.querySelector(".profile__edit-button"),u=document.querySelector(".profile__add-button"),c=document.querySelector(".profile__user"),a=document.querySelector(".profile__avatar"),s=document.querySelector(".popup__field_input_name"),l=document.querySelector(".popup__field_input_job"),f=document.querySelector(".popup__field_input_avatar"),p=document.querySelector(".popup__field_input_title"),h=document.querySelector(".popup__field_input_url");function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=document.querySelector(n),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));n.classList.add(this._errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e.toggleButtonState(t,n)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&d(t.prototype,n),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n(318);var v=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&_(t.prototype,n),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){return e.close()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close(t.currentTarget)}))}}])&&m(t.prototype,n),e}();function k(e){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e,t,n){return(S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function C(e,t){return!t||"object"!==k(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function u(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._popupImage=document.querySelector(t),r._popupTitle=document.querySelector(n),r}return t=u,(n=[{key:"open",value:function(e,t){this._popupImage.src=t,this._popupTitle.textContent=e,S(E(u.prototype),"open",this).call(this)}}])&&g(t.prototype,n),u}(b);function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(e,t,n){return(P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function q(e,t){return!t||"object"!==L(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function R(e){return(R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function u(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._handleFormSubmit=r,t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this,t=document.querySelectorAll(".popup__field");return this._inputValues={},t.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"renderLoading",value:function(e){this._popup.querySelector(".popup__submit-button").textContent=e?"Сохранение...":this._popup.querySelector(".popup__submit-button").value}},{key:"open",value:function(){P(R(u.prototype),"open",this).call(this),this.renderLoading(!1)}},{key:"close",value:function(){P(R(u.prototype),"close",this).call(this),this._popup.querySelector("form").reset()}},{key:"setEventListeners",value:function(e){var t=this;P(R(u.prototype),"setEventListeners",this).call(this,e),this._popup.addEventListener("submit",(function(e){e.preventDefault(),t.renderLoading(!0),t._handleFormSubmit(t._getInputValues())}))}}])&&j(t.prototype,n),u}(b);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.titleSelector=document.querySelector(".profile__title"),this.subtitleSelector=document.querySelector(".profile__subtitle"),this.avatar=document.querySelector(".profile__avatar")}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this.titleSelector.textContent,about:this.subtitleSelector.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;e.id,this.titleSelector.textContent=t,this.subtitleSelector.textContent=n,r&&(this.avatar.src=r)}},{key:"getUserAvatar",value:function(){return{avatar:this.avatar.src}}},{key:"setAvatar",value:function(e){var t=e.avatar;this.avatar.src=t}}])&&T(t.prototype,n),e}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"takeUserInfo",value:function(){return fetch("https://mesto.nomoreparties.co/v1/cohort-17/users/me",{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"getInitialCards",value:function(){return fetch("https://mesto.nomoreparties.co/v1/cohort-17/cards",{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"addCard",value:function(e,t){return fetch("https://mesto.nomoreparties.co/v1/cohort-17/cards",{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"changeAvatar",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-17/users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"editInfo",value:function(e,t){return fetch("https://mesto.nomoreparties.co/v1/cohort-17/users/me",{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"likeCard",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-17/cards/likes/".concat(e),{method:"PUT",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteLikeCard",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-17/cards/likes/".concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){return fetch("https://mesto.nomoreparties.co/v1/cohort-17/cards/".concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e:Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))}}])&&D(t.prototype,n),e}();function U(e){return(U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function V(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e,t,n){return(H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function z(e,t){return(z=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function F(e,t){return!t||"object"!==U(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function N(e){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var J,G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&z(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(r);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function u(){return V(this,u),i.apply(this,arguments)}return t=u,(n=[{key:"open",value:function(e){H(N(u.prototype),"open",this).call(this),this._confirmCb=e}},{key:"setEventListeners",value:function(){var e=this;H(N(u.prototype),"setEventListeners",this).call(this),document.querySelector(".popup__submit-button-delete").addEventListener("click",(function(){e._confirmCb()}))}}])&&M(t.prototype,n),u}(b),K=new B({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"ef890c66-d7a0-4a1d-a482-7b78f3f64350","Content-Type":"application/json"}});K.takeUserInfo().then((function(e){J=e._id}));var Q=new A,W=new O(".popup_type_img",".popup__image",".popup__caption");W.setEventListeners();var X=function(e){var n=new t({name:e.name,link:e.link,likes:e.likes,ownerId:e.owner._id,id:e._id,userId:J},document.querySelector("#elements").content.querySelector(".element__cards").cloneNode(!0),{handleCardClick:function(e){var t=e.name,n=e.link;W.open(t,n)},handleDeleteClick:function(){$.open((function(){K.deleteCard(e._id).then((function(){return n.handleDeleteCard()})),$.close()}))},handleLikeClick:function(){n.isLiked()?K.deleteLikeCard(e._id).then((function(){return n.likeCountMinus()})):K.likeCard(e._id).then((function(){return n.likeCountPlus()}))}});return n.generateCard()},Y=new v({items:Z,renderer:function(e){Y.addItem(X(e))}},".element"),Z=K.getInitialCards().then((function(e){Y.renderItems(e)})),$=new G(".popup_type_delete");$.setEventListeners();var ee=new x({popupSelector:".popup_type_add",handleFormSubmit:function(){var e=p.value,t=h.value;K.addCard(e,t).then((function(e){Y.addItem(X(e)),ee.close()}))}});ee.setEventListeners(),u.addEventListener("click",(function(){ee.open();var e=Array.from(o.querySelectorAll(".popup__field")),t=o.querySelector(".popup__submit-button");re.toggleButtonState(e,t)}));var te=new x({popupSelector:".popup_type_edit",handleFormSubmit:function(e){var t=s.value,n=l.value;K.editInfo(t,n).then((function(e){return e})),Q.setUserInfo({name:e.fullname,about:e.job}),te.close()}});K.takeUserInfo().then((function(e){Q.setUserInfo({name:e.name,about:e.about,avatar:e.avatar,userid:e._id})})),i.addEventListener("click",(function(){var e=Q.getUserInfo();s.value=e.name,l.value=e.about,te.open()})),te.setEventListeners();var ne=new x({popupSelector:".popup_type_avatar",handleFormSubmit:function(e){var t=f.value;K.changeAvatar(t).then((function(e){return e})),Q.setAvatar({avatar:e.avatar}),ne.close()}});c.addEventListener("click",(function(){f.value=a.src,ne.open()})),ne.setEventListeners();var re=new y(r,r.formAdd);re.enableValidation(),new y(r,r.formEdit).enableValidation()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy93ZWJwYWNrLXNvdXJjZXMvbGliL0NvbXBhdFNvdXJjZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy93ZWJwYWNrLXNvdXJjZXMvbGliL1NvdXJjZS5qcyIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvdXRpbHMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhCdXR0b24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOlsiU291cmNlIiwicmVxdWlyZSIsIkNvbXBhdFNvdXJjZSIsInNvdXJjZUxpa2UiLCJfc291cmNlTGlrZSIsInRoaXMiLCJzb3VyY2UiLCJidWZmZXIiLCJzaXplIiwib3B0aW9ucyIsIm1hcCIsInNvdXJjZUFuZE1hcCIsImhhc2giLCJ1cGRhdGVIYXNoIiwiRXJyb3IiLCJ1cGRhdGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiQnVmZmVyIiwiaXNCdWZmZXIiLCJmcm9tIiwibGVuZ3RoIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIkNhcmQiLCJ0ZW1wbGF0ZSIsIm5hbWUiLCJsaW5rIiwibGlrZXMiLCJvd25lcklkIiwiaWQiLCJ1c2VySWQiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVEZWxldGVDbGljayIsImhhbmRsZUxpa2VDbGljayIsIl9uYW1lIiwiX2xpbmsiLCJfbGlrZXMiLCJfaWQiLCJfb3duZXJJZCIsIl91c2VySWQiLCJfdGVtcGxhdGUiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9lbGVtZW50IiwiX2ltYWdlIiwicXVlcnlTZWxlY3RvciIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiX2xpa2VzQ291bnQiLCJfbGlrZUJ1dHRvbiIsImZpbmQiLCJsaWtlIiwiY2xhc3NMaXN0IiwiYWRkIiwiX2Rpc3BsYXlEZWxldGVCdXR0b24iLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW1vdmUiLCJjb250YWlucyIsImN1cnJlbnRWYWx1ZSIsImhpZGRlbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXJhbXMiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiZm9ybUFkZCIsImZvcm1FZGl0Iiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInBvcHVwQWRkIiwiZG9jdW1lbnQiLCJwcm9maWxlRWRpdEJ1dHRvbiIsImFkZENhcmRCdXR0b24iLCJwcm9maWxlQXZhdGFyQnV0dG9uIiwiYXZhdGFyIiwiaW5wdXRzTmFtZSIsImlucHV0c0pvYiIsImlucHV0c0F2YXRhciIsImlucHV0c1RpdGxlIiwiaW5wdXRzVXJsIiwiRm9ybVZhbGlkYXRvciIsImZvcm1FbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsInNvbWUiLCJidXR0b25FbGVtZW50IiwiX2hhc0ludmFsaWRJbnB1dCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsIkFycmF5IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlZEl0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImRhdGEiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2dCIsImtleSIsImNsb3NlIiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIlBvcHVwV2l0aEltYWdlIiwicG9wdXBJbWFnZSIsInBvcHVwVGl0bGUiLCJfcG9wdXBJbWFnZSIsIl9wb3B1cFRpdGxlIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsInVzZXJJbnB1dHMiLCJfaW5wdXRWYWx1ZXMiLCJ2YWx1ZSIsImlzTG9hZGluZyIsInJlbmRlckxvYWRpbmciLCJyZXNldCIsInBvcHVwIiwiX2dldElucHV0VmFsdWVzIiwiVXNlckluZm8iLCJ0aXRsZVNlbGVjdG9yIiwic3VidGl0bGVTZWxlY3RvciIsImFib3V0IiwiQXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiaW5wdXRUaXRsZSIsImlucHV0VXJsIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpbnB1dEF2YXRhciIsImlucHV0TmFtZSIsImlucHV0QWJvdXQiLCJQb3B1cFdpdGhCdXR0b24iLCJjb25maXJtQ2IiLCJfY29uZmlybUNiIiwiYXBpIiwiYXV0aG9yaXphdGlvbiIsInRha2VVc2VySW5mbyIsInVzZXJJbmZvIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJnZW5lcmF0ZUNhcmRGcm9tUmVzcG9uc2VEYXRhIiwicmVzcG9uc2VEYXRhIiwiY2FyZEVsZW1lbnQiLCJvd25lciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJvcGVuIiwicG9wdXBEZWxldGUiLCJkZWxldGVDYXJkIiwiaGFuZGxlRGVsZXRlQ2FyZCIsImlzTGlrZWQiLCJkZWxldGVMaWtlQ2FyZCIsImxpa2VDb3VudE1pbnVzIiwibGlrZUNhcmQiLCJsaWtlQ291bnRQbHVzIiwiZ2VuZXJhdGVDYXJkIiwiY2FyZHNMaXN0IiwiZ2V0Q2FyZEVsZW1lbnQiLCJhZGRJdGVtIiwiZ2V0SW5pdGlhbENhcmRzIiwicmVuZGVySXRlbXMiLCJhZGRDYXJkIiwiZm9ybUFkZFZhbGlkYXRvciIsImVkaXRJbmZvIiwic2V0VXNlckluZm8iLCJmdWxsbmFtZSIsImpvYiIsInVzZXJpZCIsInByb2ZpbGUiLCJnZXRVc2VySW5mbyIsImZvcm1BdmF0YXIiLCJjaGFuZ2VBdmF0YXIiLCJzZXRBdmF0YXIiLCJlbmFibGVWYWxpZGF0aW9uIl0sIm1hcHBpbmdzIjoiK3FDQU1BLElBQU1BLEVBQVNDLEVBQVEsS0FFakJDLEUsOG9CQU9M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LEVBQVMwQixZQUFZLENBQUV6TCxLQUFNOEYsRUFBSzRGLFNBQVUxRCxNQUFPbEMsRUFBSzZGLE1BQ3hEakosR0FBU2dFLFdBS2JrRCxFQUFJRSxlQUFlekIsTUFBSyxTQUFDdkMsR0FDckJpRSxFQUFTMEIsWUFBWSxDQUFFekwsS0FBTThGLEVBQUs5RixLQUFNZ0ksTUFBT2xDLEVBQUtrQyxNQUFPNUUsT0FBUTBDLEVBQUsxQyxPQUFRd0ksT0FBUTlGLEVBQUtsRixTQU9yR3FDLEVBQWtCWixpQkFBaUIsU0FBUyxXQUN4QyxJQUFNd0osRUFBVTlCLEVBQVMrQixjQUV6QnpJLFFBQW1Cd0ksRUFBUTdMLEtBQzNCc0QsUUFBa0J1SSxFQUFRN0QsTUFFMUJ0RixHQUFTNkgsVUFHYjdILEdBQVNzSCxvQkFFVCxJQUFNK0IsR0FBYSxJQUFJN0UsRUFBYyxDQUNqQ2YsY0FBZSxxQkFDZmdCLGlCQUFrQixTQUFDckIsR0FDZixJQUFNd0QsRUFBYy9GLEVBQWFnRSxNQUVqQ3FDLEVBQUlvQyxhQUFhMUMsR0FBYWpCLE1BQUssU0FBQ3ZDLEdBQUQsT0FBVUEsS0FDN0NpRSxFQUFTa0MsVUFBVSxDQUFFN0ksT0FBUTBDLEVBQUsxQyxTQUNsQzJJLEdBQVdyRixXQUluQnZELEVBQW9CZCxpQkFBaUIsU0FBUyxXQUMxQ2tCLFFBQXFCSCxFQUFPOUIsSUFFNUJ5SyxHQUFXeEIsVUFHZndCLEdBQVcvQixvQkFHWCxJQUFNdUIsR0FBbUIsSUFBSTdILEVBQWNwQixFQUFRQSxFQUFPRyxTQUMxRDhJLEdBQWlCVyxtQkFFUyxJQUFJeEksRUFBY3BCLEVBQVFBLEVBQU9JLFVBQ3pDd0osb0IiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cInVzZSBzdHJpY3RcIjtcblxuY29uc3QgU291cmNlID0gcmVxdWlyZShcIi4vU291cmNlXCIpO1xuXG5jbGFzcyBDb21wYXRTb3VyY2UgZXh0ZW5kcyBTb3VyY2Uge1xuXHRzdGF0aWMgZnJvbShzb3VyY2VMaWtlKSB7XG5cdFx0cmV0dXJuIHNvdXJjZUxpa2UgaW5zdGFuY2VvZiBTb3VyY2Vcblx0XHRcdD8gc291cmNlTGlrZVxuXHRcdFx0OiBuZXcgQ29tcGF0U291cmNlKHNvdXJjZUxpa2UpO1xuXHR9XG5cblx0Y29uc3RydWN0b3Ioc291cmNlTGlrZSkge1xuXHRcdHN1cGVyKCk7XG5cdFx0dGhpcy5fc291cmNlTGlrZSA9IHNvdXJjZUxpa2U7XG5cdH1cblxuXHRzb3VyY2UoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3NvdXJjZUxpa2Uuc291cmNlKCk7XG5cdH1cblxuXHRidWZmZXIoKSB7XG5cdFx0aWYgKHR5cGVvZiB0aGlzLl9zb3VyY2VMaWtlLmJ1ZmZlciA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5fc291cmNlTGlrZS5idWZmZXIoKTtcblx0XHR9XG5cdFx0cmV0dXJuIHN1cGVyLmJ1ZmZlcigpO1xuXHR9XG5cblx0c2l6ZSgpIHtcblx0XHRpZiAodHlwZW9mIHRoaXMuX3NvdXJjZUxpa2Uuc2l6ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5fc291cmNlTGlrZS5zaXplKCk7XG5cdFx0fVxuXHRcdHJldHVybiBzdXBlci5zaXplKCk7XG5cdH1cblxuXHRtYXAob3B0aW9ucykge1xuXHRcdGlmICh0eXBlb2YgdGhpcy5fc291cmNlTGlrZS5tYXAgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0cmV0dXJuIHRoaXMuX3NvdXJjZUxpa2UubWFwKG9wdGlvbnMpO1xuXHRcdH1cblx0XHRyZXR1cm4gc3VwZXIubWFwKG9wdGlvbnMpO1xuXHR9XG5cblx0c291cmNlQW5kTWFwKG9wdGlvbnMpIHtcblx0XHRpZiAodHlwZW9mIHRoaXMuX3NvdXJjZUxpa2Uuc291cmNlQW5kTWFwID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdHJldHVybiB0aGlzLl9zb3VyY2VMaWtlLnNvdXJjZUFuZE1hcChvcHRpb25zKTtcblx0XHR9XG5cdFx0cmV0dXJuIHN1cGVyLnNvdXJjZUFuZE1hcChvcHRpb25zKTtcblx0fVxuXG5cdHVwZGF0ZUhhc2goaGFzaCkge1xuXHRcdGlmICh0eXBlb2YgdGhpcy5fc291cmNlTGlrZS51cGRhdGVIYXNoID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdHJldHVybiB0aGlzLl9zb3VyY2VMaWtlLnVwZGF0ZUhhc2goaGFzaCk7XG5cdFx0fVxuXHRcdGlmICh0eXBlb2YgdGhpcy5fc291cmNlTGlrZS5tYXAgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFxuXHRcdFx0XHRcIkEgU291cmNlLWxpa2Ugb2JqZWN0IHdpdGggYSAnbWFwJyBtZXRob2QgbXVzdCBhbHNvIHByb3ZpZGUgYW4gJ3VwZGF0ZUhhc2gnIG1ldGhvZFwiXG5cdFx0XHQpO1xuXHRcdH1cblx0XHRoYXNoLnVwZGF0ZSh0aGlzLmJ1ZmZlcigpKTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbXBhdFNvdXJjZTtcbiIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cInVzZSBzdHJpY3RcIjtcblxuY2xhc3MgU291cmNlIHtcblx0c291cmNlKCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkFic3RyYWN0XCIpO1xuXHR9XG5cblx0YnVmZmVyKCkge1xuXHRcdGNvbnN0IHNvdXJjZSA9IHRoaXMuc291cmNlKCk7XG5cdFx0aWYgKEJ1ZmZlci5pc0J1ZmZlcihzb3VyY2UpKSByZXR1cm4gc291cmNlO1xuXHRcdHJldHVybiBCdWZmZXIuZnJvbShzb3VyY2UsIFwidXRmLThcIik7XG5cdH1cblxuXHRzaXplKCkge1xuXHRcdHJldHVybiB0aGlzLmJ1ZmZlcigpLmxlbmd0aDtcblx0fVxuXG5cdG1hcChvcHRpb25zKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHRzb3VyY2VBbmRNYXAob3B0aW9ucykge1xuXHRcdHJldHVybiB7XG5cdFx0XHRzb3VyY2U6IHRoaXMuc291cmNlKCksXG5cdFx0XHRtYXA6IHRoaXMubWFwKG9wdGlvbnMpXG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZUhhc2goaGFzaCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkFic3RyYWN0XCIpO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU291cmNlO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0aWYoX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSkge1xuXHRcdHJldHVybiBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCJleHBvcnQgY2xhc3MgQ2FyZCB7XG4gICAgY29uc3RydWN0b3IoeyBuYW1lLCBsaW5rLCBsaWtlcywgb3duZXJJZCwgaWQsIHVzZXJJZCB9LCB0ZW1wbGF0ZSwgeyBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZURlbGV0ZUNsaWNrLCBoYW5kbGVMaWtlQ2xpY2sgfSkge1xuICAgICAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5fbGluayA9IGxpbms7XG4gICAgICAgIHRoaXMuX2xpa2VzID0gbGlrZXM7XG4gICAgICAgIHRoaXMuX2lkID0gaWQ7XG4gICAgICAgIHRoaXMuX293bmVySWQgPSBvd25lcklkO1xuICAgICAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XG4gICAgICAgIHRoaXMuX3RlbXBsYXRlID0gdGVtcGxhdGU7XG4gICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcbiAgICAgICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrID0gaGFuZGxlTGlrZUNsaWNrO1xuICAgIH1cblxuICAgIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX3RlbXBsYXRlO1xuICAgICAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJyk7XG4gICAgICAgIHRoaXMuX2ltYWdlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgICAgIHRoaXMuX2ltYWdlLmFsdCA9IHRoaXMuX25hbWU7XG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgICAgICB0aGlzLl9saWtlc0NvdW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZXMnKTtcbiAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtaW1hZ2UnKTtcbiAgICAgICAgaWYgKHRoaXMuX2xpa2VzICYmIHRoaXMuX2xpa2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX2xpa2VzQ291bnQudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XG4vL9C+0YLQvtCx0YDQsNC20LXQvdC40LUg0LDQutGC0LjQstC90L7Qs9C+INGN0LvQtdC80LXQvdGC0LAg0LvQsNC50Log0L/QvtGB0LvQtSDQv9C10YDQtdC30LDQs9GA0YPQt9C60Lgg0YHRgtGA0LDQvdC40YbRi1xuICAgICAgICAgICAgaWYgKHRoaXMuX2xpa2VzLmZpbmQoKGxpa2UpID0+IGxpa2UuX2lkID09PSB0aGlzLl91c2VySWQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdlbGVtZW50X19saWtlLWltYWdlLWFjdGl2ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0aGlzLl9kaXNwbGF5RGVsZXRlQnV0dG9uKCk7XG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gICAgfVxuXG4gICAgaGFuZGxlRGVsZXRlQ2FyZCgpIHtcbiAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICBnZXRJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkO1xuICAgIH1cblxuICAgIGlzTGlrZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnZWxlbWVudF9fbGlrZS1pbWFnZS1hY3RpdmUnKTtcbiAgICB9XG5cbiAgICB1cGRhdGVMaWtlcyhsaWtlcykge1xuICAgICAgICB0aGlzLl9saWtlcyA9IGxpa2VzO1xuICAgIH1cblxuICAgIGxpa2VDb3VudFBsdXMoKSB7XG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudF9fbGlrZS1pbWFnZS1hY3RpdmUnKTtcbiAgICAgICAgY29uc3QgY3VycmVudFZhbHVlID0gK3RoaXMuX2xpa2VzQ291bnQudGV4dENvbnRlbnQ7XG4gICAgICAgIHRoaXMuX2xpa2VzQ291bnQudGV4dENvbnRlbnQgPSBjdXJyZW50VmFsdWUgKyAxO1xuICAgIH1cblxuICAgIGxpa2VDb3VudE1pbnVzKCkge1xuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2VsZW1lbnRfX2xpa2UtaW1hZ2UtYWN0aXZlJyk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IHRoaXMuX2xpa2VzQ291bnQudGV4dENvbnRlbnQ7XG4gICAgICAgIHRoaXMuX2xpa2VzQ291bnQudGV4dENvbnRlbnQgPSBjdXJyZW50VmFsdWUgLSAxO1xuICAgIH1cblxuICAgIF9kaXNwbGF5RGVsZXRlQnV0dG9uKCkge1xuICAgICAgICBjb25zdCBkZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUtYnV0dG9uJyk7XG4gICAgICAgIGRlbGV0ZUJ1dHRvbi5oaWRkZW4gPSB0aGlzLl9vd25lcklkICE9PSB0aGlzLl91c2VySWQ7XG4gICAgfVxuXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgICB0aGlzLl9saWtlQnV0dG9uXG4gICAgICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2hhbmRsZUxpa2VDbGljaygpKTtcblxuICAgICAgICB0aGlzLl9pbWFnZVxuICAgICAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlQ2FyZENsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KSk7XG5cbiAgICAgICAgdGhpcy5fZWxlbWVudFxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUtYnV0dG9uJylcbiAgICAgICAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrKCkpO1xuXG4gICAgfVxuXG59IiwiZXhwb3J0IGNvbnN0IHBhcmFtcyA9IHtcbiAgICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxuICAgIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2ZpZWxkJyxcbiAgICBmb3JtQWRkOiAnLnBvcHVwX3R5cGVfYWRkJyxcbiAgICBmb3JtRWRpdDogJy5wb3B1cF90eXBlX2VkaXQnLFxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19zdWJtaXQtYnV0dG9uJyxcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3N1Ym1pdC1idXR0b24tZGlzYWJsZWQnLFxuICAgIGlucHV0RXJyb3JDbGFzczogJ3BvcHVwX19maWVsZC1lcnJvcicsXG4gICAgZXJyb3JDbGFzczogJ3BvcHVwX19maWVsZC1lcnJvci1hY3RpdmUnXG59XG5cbmV4cG9ydCBjb25zdCBwb3B1cEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xuZXhwb3J0IGNvbnN0IHBvcHVwVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2NhcHRpb24nKTtcblxuZXhwb3J0IGNvbnN0IHBvcHVwQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3R5cGVfYWRkJyk7XG5cbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ1dHRvbicpO1xuZXhwb3J0IGNvbnN0IGFkZENhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ1dHRvbicpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fdXNlcicpO1xuZXhwb3J0IGNvbnN0IGF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXInKTtcblxuZXhwb3J0IGNvbnN0IGlucHV0c05hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ZpZWxkX2lucHV0X25hbWUnKTtcbmV4cG9ydCBjb25zdCBpbnB1dHNKb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ZpZWxkX2lucHV0X2pvYicpO1xuXG5leHBvcnQgY29uc3QgaW5wdXRzQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19maWVsZF9pbnB1dF9hdmF0YXInKTtcblxuZXhwb3J0IGNvbnN0IGlucHV0c1RpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19maWVsZF9pbnB1dF90aXRsZScpO1xuZXhwb3J0IGNvbnN0IGlucHV0c1VybCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZmllbGRfaW5wdXRfdXJsJyk7XG4iLCJleHBvcnQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gICAgY29uc3RydWN0b3IocGFyYW1zLCBmb3JtRWxlbWVudCkge1xuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZm9ybUVsZW1lbnQpO1xuICAgICAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gcGFyYW1zLmlucHV0U2VsZWN0b3I7XG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gcGFyYW1zLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gcGFyYW1zLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHBhcmFtcy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBwYXJhbXMuZXJyb3JDbGFzcztcbiAgICB9XG5cbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gICAgfTtcblxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICB9O1xuXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICAgICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgICAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+ICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpO1xuICAgIH07XG5cbiAgICB0b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpKSB7XG4gICAgICAgICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICAgICAgICBidXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIHRydWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgICAgICAgYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7XG4gICAgICAgIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxuICAgICAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICAgICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICAgICAgY29uc3Qgc3VibWl0Rm9ybUhhbmRsZXIgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgc3VibWl0Rm9ybUhhbmRsZXIpO1xuXG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfTtcbn0iLCJpbXBvcnQgeyBmcm9tIH0gZnJvbSBcIndlYnBhY2stc291cmNlcy9saWIvQ29tcGF0U291cmNlXCI7XG5cbmV4cG9ydCBjbGFzcyBTZWN0aW9uIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgICAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gaXRlbXM7XG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG5cbiAgICAgICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgcmVuZGVySXRlbXMoZGF0YSkge1xuICAgICAgICBkYXRhLmZvckVhY2goaXRlbSA9PiB0aGlzLl9yZW5kZXJlcihpdGVtKSk7XG4gICAgfVxuXG4gICAgYWRkSXRlbShlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICAgIH1cbn1cblxuIiwiXG5leHBvcnQgY2xhc3MgUG9wdXAge1xuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICAgICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICAgICAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgb3BlbigpIHtcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpOyBcbiAgICB9XG5cbiAgICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgICAgICAgICAgICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAgICAgY29uc3QgcG9wdXBDbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UnKTtcbiAgICAgICAgcG9wdXBDbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuY2xvc2UoKSk7XG5cblxuICAgICAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcbiAgICAgICAgICAgIGlmIChldnQudGFyZ2V0ICE9PSBldnQuY3VycmVudFRhcmdldCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5jbG9zZShldnQuY3VycmVudFRhcmdldCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSAnLi9Qb3B1cC5qcyc7XG5cbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBwb3B1cEltYWdlLCBwb3B1cFRpdGxlKSB7XG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgICAgICB0aGlzLl9wb3B1cEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cEltYWdlKTtcbiAgICAgICAgdGhpcy5fcG9wdXBUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBUaXRsZSk7XG4gICAgfVxuXG4gICAgb3BlbihuYW1lLCBsaW5rKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2Uuc3JjID0gbGluaztcbiAgICAgICAgdGhpcy5fcG9wdXBUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgICAgIHN1cGVyLm9wZW4oKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tICcuL1BvcHVwLmpzJztcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0fSkge1xuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgfVxuXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xuICAgICAgICBjb25zdCB1c2VySW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19maWVsZCcpO1xuICAgICAgICB0aGlzLl9pbnB1dFZhbHVlcyA9IHt9O1xuICAgICAgICB1c2VySW5wdXRzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2lucHV0VmFsdWVzW2l0ZW0ubmFtZV0gPSBpdGVtLnZhbHVlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lucHV0VmFsdWVzO1xuICAgIH1cblxuICAgIHJlbmRlckxvYWRpbmcoaXNMb2FkaW5nKSB7XG4gICAgICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgICAgICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc3VibWl0LWJ1dHRvbicpLnRleHRDb250ZW50ID0gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc3VibWl0LWJ1dHRvbicpLnRleHRDb250ZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19zdWJtaXQtYnV0dG9uJykudmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvcGVuKCkge1xuICAgICAgICBzdXBlci5vcGVuKCk7XG4gICAgICAgIHRoaXMucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKS5yZXNldCgpOyBcbiAgICB9XG5cbiAgICBzZXRFdmVudExpc3RlbmVycyhwb3B1cCkge1xuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycyhwb3B1cCk7XG4gICAgICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgICAgfSlcbiAgICB9XG59XG5cblxuIiwiZXhwb3J0IGNsYXNzIFVzZXJJbmZvIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy50aXRsZVNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX3RpdGxlJyk7XG4gICAgICAgIHRoaXMuc3VidGl0bGVTZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19zdWJ0aXRsZScpO1xuICAgICAgICB0aGlzLmF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXInKTtcbiAgICB9XG5cbiAgICBnZXRVc2VySW5mbygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMudGl0bGVTZWxlY3Rvci50ZXh0Q29udGVudCxcbiAgICAgICAgICAgIGFib3V0OiB0aGlzLnN1YnRpdGxlU2VsZWN0b3IudGV4dENvbnRlbnQsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZXRVc2VySW5mbyh7IG5hbWUsIGFib3V0LCBhdmF0YXIsIGlkIH0pIHtcbiAgICAgICAgdGhpcy50aXRsZVNlbGVjdG9yLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICAgICAgdGhpcy5zdWJ0aXRsZVNlbGVjdG9yLnRleHRDb250ZW50ID0gYWJvdXQ7XG4gICAgICAgIGlmKGF2YXRhcikge1xuICAgICAgICB0aGlzLmF2YXRhci5zcmMgPSBhdmF0YXI7XG4gICAgfVxuICAgIH1cblxuICAgIGdldFVzZXJBdmF0YXIoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdmF0YXI6IHRoaXMuYXZhdGFyLnNyYyxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldEF2YXRhcih7IGF2YXRhciB9KSB7XG4gICAgICAgIHRoaXMuYXZhdGFyLnNyYyA9IGF2YXRhcjtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBhdmF0YXIgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRcIjtcblxuZXhwb3J0IGNsYXNzIEFwaSB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICB0aGlzLmJhc2VVcmwgPSBvcHRpb25zLmJhc2VVcmw7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcbiAgICB9XG5cbiAgICB0YWtlVXNlckluZm8oKSB7XG4gICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC0xNy91c2Vycy9tZScsIHtcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vINC10YHQu9C4INC+0YjQuNCx0LrQsCwg0L7RgtC60LvQvtC90Y/QtdC8INC/0YDQvtC80LjRgVxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOyAvLyDQstGL0LLQtdC00LXQvCDQvtGI0LjQsdC60YMg0LIg0LrQvtC90YHQvtC70YxcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtMTcvY2FyZHMnLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnNcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyDQtdGB0LvQuCDQvtGI0LjQsdC60LAsINC+0YLQutC70L7QvdGP0LXQvCDQv9GA0L7QvNC40YFcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsgLy8g0LLRi9Cy0LXQtNC10Lwg0L7RiNC40LHQutGDINCyINC60L7QvdGB0L7Qu9GMXG4gICAgICAgICAgICB9KVxuICAgIH1cblxuICAgIGFkZENhcmQoaW5wdXRUaXRsZSwgaW5wdXRVcmwpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoKCdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTE3L2NhcmRzJywge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBuYW1lOiBpbnB1dFRpdGxlLFxuICAgICAgICAgICAgICAgIGxpbms6IGlucHV0VXJsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vINC10YHQu9C4INC+0YjQuNCx0LrQsCwg0L7RgtC60LvQvtC90Y/QtdC8INC/0YDQvtC80LjRgVxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOyAvLyDQstGL0LLQtdC00LXQvCDQvtGI0LjQsdC60YMg0LIg0LrQvtC90YHQvtC70YxcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgY2hhbmdlQXZhdGFyKGlucHV0QXZhdGFyKSB7XG4gICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC0xNy91c2Vycy9tZS9hdmF0YXInLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBhdmF0YXI6IGlucHV0QXZhdGFyXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vINC10YHQu9C4INC+0YjQuNCx0LrQsCwg0L7RgtC60LvQvtC90Y/QtdC8INC/0YDQvtC80LjRgVxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOyAvLyDQstGL0LLQtdC00LXQvCDQvtGI0LjQsdC60YMg0LIg0LrQvtC90YHQvtC70YxcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgZWRpdEluZm8oaW5wdXROYW1lLCBpbnB1dEFib3V0KSB7XG4gICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC0xNy91c2Vycy9tZScsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIG5hbWU6IGlucHV0TmFtZSxcbiAgICAgICAgICAgICAgICBhYm91dDogaW5wdXRBYm91dFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyDQtdGB0LvQuCDQvtGI0LjQsdC60LAsINC+0YLQutC70L7QvdGP0LXQvCDQv9GA0L7QvNC40YFcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsgLy8g0LLRi9Cy0LXQtNC10Lwg0L7RiNC40LHQutGDINCyINC60L7QvdGB0L7Qu9GMXG4gICAgICAgICAgICB9KVxuICAgIH1cblxuICAgIGxpa2VDYXJkKF9pZCkge1xuICAgICAgICByZXR1cm4gZmV0Y2goYGh0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtMTcvY2FyZHMvbGlrZXMvJHtfaWR9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzXG4gICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8g0LXRgdC70Lgg0L7RiNC40LHQutCwLCDQvtGC0LrQu9C+0L3Rj9C10Lwg0L/RgNC+0LzQuNGBXG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7IC8vINCy0YvQstC10LTQtdC8INC+0YjQuNCx0LrRgyDQsiDQutC+0L3RgdC+0LvRjFxuICAgICAgICAgICAgfSlcbiAgICB9XG5cbiAgICBkZWxldGVMaWtlQ2FyZChfaWQpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoKGBodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTE3L2NhcmRzL2xpa2VzLyR7X2lkfWAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vINC10YHQu9C4INC+0YjQuNCx0LrQsCwg0L7RgtC60LvQvtC90Y/QtdC8INC/0YDQvtC80LjRgVxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOyAvLyDQstGL0LLQtdC00LXQvCDQvtGI0LjQsdC60YMg0LIg0LrQvtC90YHQvtC70YxcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgZGVsZXRlQ2FyZChfaWQpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoKGBodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTE3L2NhcmRzLyR7X2lkfWAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8g0LXRgdC70Lgg0L7RiNC40LHQutCwLCDQvtGC0LrQu9C+0L3Rj9C10Lwg0L/RgNC+0LzQuNGBXG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7IC8vINCy0YvQstC10LTQtdC8INC+0YjQuNCx0LrRgyDQsiDQutC+0L3RgdC+0LvRjFxuICAgICAgICAgICAgfSlcbiAgICB9XG59XG5cbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSAnLi9Qb3B1cC5qcyc7XG5cbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhCdXR0b24gZXh0ZW5kcyBQb3B1cCB7XG4gICAgb3Blbihjb25maXJtQ2IpIHtcbiAgICAgICAgc3VwZXIub3BlbigpO1xuICAgICAgICB0aGlzLl9jb25maXJtQ2IgPSBjb25maXJtQ2I7XG4gICAgfVxuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgIGNvbnN0IGNvbmZpcm1CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3N1Ym1pdC1idXR0b24tZGVsZXRlJyk7IFxuICAgICAgICBjb25maXJtQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fY29uZmlybUNiKCk7XG4gICAgICAgIH0pXG4gICAgfVxufSIsImltcG9ydCB7IENhcmQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQuanMnO1xuaW1wb3J0IHtcbiAgICBwYXJhbXMsIHBvcHVwQWRkLCBhZGRDYXJkQnV0dG9uLCBwcm9maWxlRWRpdEJ1dHRvbiwgaW5wdXRzTmFtZSwgaW5wdXRzSm9iLFxuICAgIGlucHV0c0F2YXRhciwgcHJvZmlsZUF2YXRhckJ1dHRvbiwgaW5wdXRzVGl0bGUsIGlucHV0c1VybCwgYXZhdGFyXG59IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50LmpzJztcbmltcG9ydCB7IEZvcm1WYWxpZGF0b3IgfSBmcm9tICcuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9IGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xuaW1wb3J0IHsgUG9wdXBXaXRoRm9ybSB9IGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XG5pbXBvcnQgeyBVc2VySW5mbyB9IGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8uanMnO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSAnLi4vY29tcG9uZW50cy9BcGkuanMnO1xuaW1wb3J0IHsgUG9wdXBXaXRoQnV0dG9uIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhCdXR0b24uanMnO1xuaW1wb3J0ICcuL2luZGV4LmNzcyc7XG5cblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gICAgYmFzZVVybDogJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtMTcnLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogJ2VmODkwYzY2LWQ3YTAtNGExZC1hNDgyLTdiNzhmM2Y2NDM1MCcsXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICB9XG59KTtcblxubGV0IHVzZXJJZDtcbmFwaS50YWtlVXNlckluZm8oKS50aGVuKChkYXRhKSA9PiB7IHVzZXJJZCA9IGRhdGEuX2lkIH0pO1xuXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbygpO1xuXG5jb25zdCBnZW5lcmF0ZUNhcmRUZW1wbGF0ZSA9ICgpID0+IGRvY3VtZW50XG4gICAgLnF1ZXJ5U2VsZWN0b3IoXCIjZWxlbWVudHNcIilcbiAgICAuY29udGVudFxuICAgIC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fY2FyZHMnKVxuICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbmNvbnN0IHBvcHVwSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5wb3B1cF90eXBlX2ltZycsICcucG9wdXBfX2ltYWdlJywgJy5wb3B1cF9fY2FwdGlvbicpO1xucG9wdXBJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zdCBnZW5lcmF0ZUNhcmRGcm9tUmVzcG9uc2VEYXRhID0gKHJlc3BvbnNlRGF0YSkgPT4ge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gbmV3IENhcmQoeyBuYW1lOiByZXNwb25zZURhdGEubmFtZSwgbGluazogcmVzcG9uc2VEYXRhLmxpbmssIGxpa2VzOiByZXNwb25zZURhdGEubGlrZXMsIFxuICAgICAgICBvd25lcklkOiByZXNwb25zZURhdGEub3duZXIuX2lkLCBpZDogcmVzcG9uc2VEYXRhLl9pZCwgdXNlcklkIH0sIGdlbmVyYXRlQ2FyZFRlbXBsYXRlKCksIHtcbiAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiAoeyBuYW1lLCBsaW5rIH0pID0+IHtcbiAgICAgICAgICAgIHBvcHVwSW1hZ2Uub3BlbihuYW1lLCBsaW5rKTtcbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlRGVsZXRlQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICAgIHBvcHVwRGVsZXRlLm9wZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGFwaS5kZWxldGVDYXJkKHJlc3BvbnNlRGF0YS5faWQpLnRoZW4oKCkgPT4gY2FyZEVsZW1lbnQuaGFuZGxlRGVsZXRlQ2FyZCgpKTtcbiAgICAgICAgICAgICAgICBwb3B1cERlbGV0ZS5jbG9zZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZUxpa2VDbGljazogKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGNhcmRFbGVtZW50LmlzTGlrZWQoKSkge1xuICAgICAgICAgICAgICAgIGFwaS5kZWxldGVMaWtlQ2FyZChyZXNwb25zZURhdGEuX2lkKS50aGVuKCgpID0+IGNhcmRFbGVtZW50Lmxpa2VDb3VudE1pbnVzKCkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBhcGkubGlrZUNhcmQocmVzcG9uc2VEYXRhLl9pZCkudGhlbigoKSA9PiBjYXJkRWxlbWVudC5saWtlQ291bnRQbHVzKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gY2FyZEVsZW1lbnQuZ2VuZXJhdGVDYXJkKCk7XG59XG5cbmNvbnN0IGNhcmRzTGlzdCA9IG5ldyBTZWN0aW9uKHtcbiAgICBpdGVtczogZ2V0Q2FyZEVsZW1lbnQsXG4gICAgcmVuZGVyZXI6IChyZXNwb25zZURhdGEpID0+IHtcbiAgICAgICAgY2FyZHNMaXN0LmFkZEl0ZW0oZ2VuZXJhdGVDYXJkRnJvbVJlc3BvbnNlRGF0YShyZXNwb25zZURhdGEpKTtcbiAgICB9XG59LFxuICAgICcuZWxlbWVudCdcbilcblxuY29uc3QgZ2V0Q2FyZEVsZW1lbnQgPSBhcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigoZGF0YSkgPT4ge1xuICAgIGNhcmRzTGlzdC5yZW5kZXJJdGVtcyhkYXRhKTtcbn0pO1xuXG5cbmNvbnN0IHBvcHVwRGVsZXRlID0gbmV3IFBvcHVwV2l0aEJ1dHRvbignLnBvcHVwX3R5cGVfZGVsZXRlJyk7XG5wb3B1cERlbGV0ZS5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zdCBmb3JtQWRkID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICAgIHBvcHVwU2VsZWN0b3I6ICcucG9wdXBfdHlwZV9hZGQnLFxuICAgIGhhbmRsZUZvcm1TdWJtaXQ6ICgpID0+IHtcbiAgICAgICAgY29uc3QgaW5wdXRUaXRsZSA9IGlucHV0c1RpdGxlLnZhbHVlO1xuICAgICAgICBjb25zdCBpbnB1dFVybCA9IGlucHV0c1VybC52YWx1ZTtcblxuICAgICAgICBhcGkuYWRkQ2FyZChpbnB1dFRpdGxlLCBpbnB1dFVybCkudGhlbigocmVzcG9uc2VEYXRhKSA9PiB7XG4gICAgICAgICAgICBjYXJkc0xpc3QuYWRkSXRlbShnZW5lcmF0ZUNhcmRGcm9tUmVzcG9uc2VEYXRhKHJlc3BvbnNlRGF0YSkpO1xuICAgICAgICAgICAgZm9ybUFkZC5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICB9LFxufSk7XG5cbmZvcm1BZGQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuYWRkQ2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBmb3JtQWRkLm9wZW4oKTtcblxuICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20ocG9wdXBBZGQucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19maWVsZCcpKTtcbiAgICBjb25zdCBidXR0b25FbGVtZW50ID0gcG9wdXBBZGQucXVlcnlTZWxlY3RvcignLnBvcHVwX19zdWJtaXQtYnV0dG9uJyk7XG5cbiAgICBmb3JtQWRkVmFsaWRhdG9yLnRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XG59KTtcblxuY29uc3QgZm9ybUVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gICAgcG9wdXBTZWxlY3RvcjogJy5wb3B1cF90eXBlX2VkaXQnLFxuICAgIGhhbmRsZUZvcm1TdWJtaXQ6IChkYXRhKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0TmFtZSA9IGlucHV0c05hbWUudmFsdWU7XG4gICAgICAgIGNvbnN0IGlucHV0QWJvdXQgPSBpbnB1dHNKb2IudmFsdWU7IFxuXG4gICAgICAgIGFwaS5lZGl0SW5mbyhpbnB1dE5hbWUsIGlucHV0QWJvdXQpLnRoZW4oKGRhdGEpID0+IGRhdGEpO1xuICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7IG5hbWU6IGRhdGEuZnVsbG5hbWUsIGFib3V0OiBkYXRhLmpvYiB9KTtcbiAgICAgICAgZm9ybUVkaXQuY2xvc2UoKTtcbiAgICB9XG59KTtcblxuZnVuY3Rpb24gcHV0UHJvZmlsZUluZm8oKSB7XG4gICAgYXBpLnRha2VVc2VySW5mbygpLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lOiBkYXRhLm5hbWUsIGFib3V0OiBkYXRhLmFib3V0LCBhdmF0YXI6IGRhdGEuYXZhdGFyLCB1c2VyaWQ6IGRhdGEuX2lkIH0pO1xuICAgIH0pO1xuICAgIFxufVxuXG5wdXRQcm9maWxlSW5mbygpO1xuXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBjb25zdCBwcm9maWxlID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcblxuICAgIGlucHV0c05hbWUudmFsdWUgPSBwcm9maWxlLm5hbWU7XG4gICAgaW5wdXRzSm9iLnZhbHVlID0gcHJvZmlsZS5hYm91dDtcblxuICAgIGZvcm1FZGl0Lm9wZW4oKTtcbn0pO1xuXG5mb3JtRWRpdC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zdCBmb3JtQXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICAgIHBvcHVwU2VsZWN0b3I6ICcucG9wdXBfdHlwZV9hdmF0YXInLFxuICAgIGhhbmRsZUZvcm1TdWJtaXQ6IChkYXRhKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0QXZhdGFyID0gaW5wdXRzQXZhdGFyLnZhbHVlO1xuXG4gICAgICAgIGFwaS5jaGFuZ2VBdmF0YXIoaW5wdXRBdmF0YXIpLnRoZW4oKGRhdGEpID0+IGRhdGEpO1xuICAgICAgICB1c2VySW5mby5zZXRBdmF0YXIoeyBhdmF0YXI6IGRhdGEuYXZhdGFyIH0pO1xuICAgICAgICBmb3JtQXZhdGFyLmNsb3NlKCk7XG4gICAgfVxufSk7XG5cbnByb2ZpbGVBdmF0YXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgaW5wdXRzQXZhdGFyLnZhbHVlID0gYXZhdGFyLnNyYztcblxuICAgIGZvcm1BdmF0YXIub3BlbigpO1xufSk7XG5cbmZvcm1BdmF0YXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuXG5jb25zdCBmb3JtQWRkVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IocGFyYW1zLCBwYXJhbXMuZm9ybUFkZCk7XG5mb3JtQWRkVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuY29uc3QgZm9ybUVkaXRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihwYXJhbXMsIHBhcmFtcy5mb3JtRWRpdCk7XG5mb3JtRWRpdFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=